name: Main Pipeline

env:
  SECRET: '97e5a9c49e059d0aec06be4148c21b6ff8e9c68e9ec8ee78d230d8778a4443b4addd51147071fc80a315262ce08c77841f3c14942a37e524e35a670cc442c15ec3363d09749dc0411007156420b5b2a50163dd7e3f49c31df5748bcb027372b7df77db0732f52488b737aeb07f7d152a7d7db6ca3a8b5a3e373b9c41758c6c22e4c98e45775b0c87abbde5d0d0233438d6aea69e53fcb10d5fe267c638bb43d896301e5e1b764a6e87334fe4462873e7c3d35a7c9c463f7f1cd97142e9f7165d4df0009cc6cc10739b907a6af21142b625a000c7bc06d47ad8ddab0a264b2bfee2353ac0962a87254b1e2b9c539264ae260b5b0255dc8488d270c4d7d9467e8b'

on:
  push:
    branches:
      - dev
  pull_request:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
    # Checkout your repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18' # Use your Node.js version

    # Navigate to the backend directory and install dependencies
    - name: Install dependencies
      working-directory: ./backend
      run: npm install

    # Run tests in the backend directory
    - name: Run tests
      working-directory: ./backend
      run: npm run test

  coverage:
    name: Install Dependencies and run Coverage
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 16.x
      uses: actions/setup-node@v3
      with:
        node-version: 16.x

    - name: npm install, make test-coverage
      working-directory: ./backend
      run: |
        npm install
        npm run coverage

    - name: Coveralls
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.COVERALLS_TOKEN }}
        file: ./backend/coverage/lcov.info

  docker-build-backend:
    name: Build and Push Backend Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest -f ./backend/Dockerfile ./backend
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest

  docker-build-frontend:
    name: Build and Push Frontend Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push frontend Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest -f ./frontend/Dockerfile ./frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest
